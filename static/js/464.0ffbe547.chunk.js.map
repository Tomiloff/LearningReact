{"version":3,"file":"static/js/464.0ffbe547.chunk.js","mappings":"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","sources":["components/common/formsControls/FormsControls.jsx","webpack://learning-react/./src/components/profile/myPosts/myPosts.module.css?bbaf","webpack://learning-react/./src/components/profile/myPosts/post/Post.module.css?fa80","components/profile/myPosts/post/Post.jsx","components/profile/myPosts/MyPosts.jsx","components/profile/myPosts/MyPostsContainer.jsx","webpack://learning-react/./src/components/profile/profileInfo/ProfileInfo.module.css?df08","components/profile/profileInfo/ProfileStatusWithHooks.jsx","components/profile/profileInfo/ProfileDataForm.jsx","components/profile/profileInfo/ProfileInfo.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://learning-react/./src/components/common/formsControls/FormsControls.module.css?6519"],"sourcesContent":["import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\n\r\nconst FromControl = ({input, meta: {touched, error}, ...props}) => {\r\n  const hasError = touched && error; \r\n\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n\r\n  return (\r\n    <FromControl {...props}><textarea {...input} {...restProps} /></FromControl>\r\n  )\r\n};\r\n\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return (\r\n    <FromControl {...props}><input {...input} {...restProps} /></FromControl>\r\n  )\r\n};\r\n\r\n\r\nexport const createField = (placeholder, name, component, validators, props = {}, text = \"\") => (\r\n  <div>\r\n    <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props} />\r\n    {text}\r\n  </div> \r\n);","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"myPosts_postsBlock__6yHQW\",\"posts\":\"myPosts_posts__n0EP6\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__+BfJ0\"};","import post from './Post.module.css';\r\n\r\nconst Post = ({message, likeCount}) => {\r\n  return (\r\n    <div className={post.item}>\r\n      <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR-V-L3LM3amOt_N_OOkG1GLRkb5r6HnW8QoA&usqp=CAU' />\r\n      {message}\r\n      <div>\r\n        <span>like: </span>{likeCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;","import { Field, reduxForm } from 'redux-form';\r\nimport style from './myPosts.module.css';\r\nimport Post from './post/Post';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/formsControls/FormsControls';\r\nimport React from 'react';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst addNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={\"newPostText\"} validate={[required, maxLength10]} placeholder=\"Введите текст поста\" />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\n\r\nconst PostReduxForm = reduxForm({form: 'profileAddNewPostForm'})(addNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n  \r\n  const postsElements = props.posts.map( ({message, likesCount, id}) => {\r\n    return <Post message={message} likeCount={likesCount} key={id}/>;\r\n  });\r\n\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={style.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <PostReduxForm onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={style.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport {addPostCreator, updateNewPostTextCreator} from '../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    }\r\n  };\r\n};\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__9hHtn\",\"formSummaryError\":\"ProfileInfo_formSummaryError__sTKtZ\"};","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status); \r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)  \r\n  }\r\n\r\n    return (   \r\n      <div>\r\n          { !editMode &&\r\n            <div>\r\n              <span onDoubleClick={activateEditMode}>{props.status || \"Статуса нет\"}</span>\r\n            </div>\r\n          }\r\n          { editMode &&\r\n            <div>\r\n              <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} ></input>\r\n            </div>\r\n          }\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import { reduxForm } from \"redux-form\";\r\nimport { createField } from \"../../common/formsControls/FormsControls\";\r\nimport style from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n       <div>\r\n        <button>Сохранить</button>\r\n        { error && <div className={style.formSummaryError}>\r\n        {error}\r\n        </div>}\r\n      </div>\r\n      <div>\r\n        <b>fullName</b> {createField(\"fullName\", \"fullName\", \"Input\", [])}\r\n      </div>\r\n      <div>\r\n        <b>В поисках работы:</b> {createField(\"\", \"lookingForAJob\", \"Input\", [], {type: \"checkbox\"})}\r\n      </div>\r\n      <div>\r\n        <b>Skils:</b> {createField(\"Skilss\", \"lookingForAJobDescription\", \"textarea\", [], )}\r\n      </div>\r\n      <div>\r\n        <b>About me::</b> {createField(\"About me..\", \"aboutMe\", \"textarea\", [], )}\r\n      </div>\r\n      <div>\r\n         <h3>Мои контакты</h3> {Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <div key={key} className={style.contact}>\r\n              <b>{key}: {createField(key, \"contacts.\" + key, \"Input\", [], )}</b>\r\n            </div>\r\n          )\r\n         })}\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm);\r\n\r\n\r\nexport default ProfileDataFormReduxForm;","import Preloader from '../../common/preloader/Preloader';\r\nimport style from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport UserPhoto from \"../../../assets/images/UserPhoto.png\";\r\nimport { useState } from 'react';\r\nimport ProfileDataFormReduxForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    const promise = saveProfile(formData);\r\n    promise.then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    )\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <div className={style.descriptionBlock}>\r\n        <img src={profile.photos.large || UserPhoto} className={style.mainPhoto} />\r\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        {editMode ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        {isOwner && <button onClick={goToEditMode}>Редактировать</button>}\r\n      </div>\r\n      <div>\r\n        <h2>{profile.fullName}</h2>\r\n      </div>\r\n      <div>\r\n        <b>В поисках работы:</b> {profile.lookingForAJob ? \"да\" : \"нет\"}\r\n      </div>\r\n        {profile.lookingForAJob &&\r\n          <div>\r\n            <b>Skils:</b> {profile.lookingForAJobDescription}\r\n          </div>\r\n        }\r\n      <div>\r\n          <b>About me:</b> {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n         <h3>Мои контакты</h3> {Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n          )\r\n         })}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return (\r\n    <div>\r\n      <b>{contactTitle}</b>: {contactValue ? contactValue : \"нет\"}\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from './myPosts/MyPostsContainer';\r\nimport ProfileInfo from './profileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfile={props.saveProfile} />\r\n      <MyPostsContainer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getMeProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../redux/profile-reducer\";\r\nimport { Navigate, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\n\r\nclass ProfileContainer extends React.Component  {\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authirizedUserId;\r\n    };\r\n    if (!userId) {\r\n        this.props.router.navigate('/login');\r\n        }\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n\t\tlet userId = this.props.router.params.userId;\r\n\t\t\r\n    if (prevProps.router.params.userId !== userId) {\r\n\t\t\tlet userId = 26794;\r\n      if (!userId) {\r\n        this.props.router.navigate('/login');\r\n        }\r\n      \r\n      this.props.getMeProfile(userId);\r\n      this.props.getStatus(userId);\r\n\t\t}\r\n\t}\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} isOwner={!this.props.router.params.userId} savePhoto={this.props.savePhoto} saveProfile={this.props.saveProfile}/>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authirizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n  })\r\n};\r\n\r\n\r\nconst withRouter = (Component) => {\r\n\tfunction ComponentWithRouterProp(props) {\r\n\t\tlet navigate = useNavigate();\r\n\t\tlet params = useParams();\r\n    \r\n\t\treturn (\r\n      <Component {...props} router={{ params, navigate }} />\r\n      \r\n    );\r\n\t}\r\n\treturn ComponentWithRouterProp;\r\n};\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getMeProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />\r\n  \r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};","export const required = value => {\r\n  if (value) return undefined;\r\n\r\n  return \"Field is required\";\r\n};\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max lengths is ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__VZufH\",\"error\":\"FormsControls_error__VE14A\",\"formSummaryError\":\"FormsControls_formSummaryError__Y-xFD\",\"imageCaptcha\":\"FormsControls_imageCaptcha__VIGc9\"};"],"names":["FromControl","input","meta","touched","error","props","hasError","className","styles","children","Textarea","restProps","child","Input","createField","placeholder","name","component","validators","text","validate","message","likeCount","post","src","maxLength10","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","required","React","postsElements","posts","map","likesCount","id","style","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","type","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","photos","large","UserPhoto","target","files","length","initialValues","formData","then","ProfileContainer","userId","this","router","params","authirizedUserId","navigate","getUserProfile","getStatus","prevProps","getMeProfile","compose","auth","isAuth","Component","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to","maxLength"],"sourceRoot":""}