{"version":3,"file":"static/js/938.59a2a6cc.chunk.js","mappings":"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","sources":["components/common/formsControls/FormsControls.jsx","webpack://learning-react/./src/components/profile/myPosts/myPosts.module.css?bbaf","webpack://learning-react/./src/components/profile/myPosts/post/Post.module.css?fa80","components/profile/myPosts/post/Post.jsx","components/profile/myPosts/MyPosts.jsx","components/profile/myPosts/MyPostsContainer.jsx","webpack://learning-react/./src/components/profile/profileInfo/ProfileInfo.module.css?df08","components/profile/profileInfo/ProfileStatusWithHooks.jsx","components/profile/profileInfo/ProfileInfo.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://learning-react/./src/components/common/formsControls/FormsControls.module.css?6519"],"sourcesContent":["import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\n\r\nconst FromControl = ({input, meta: {touched, error}, ...props}) => {\r\n  const hasError = touched && error; \r\n\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n// export const Textarea = ({input, meta, ...props}) => {\r\n//   const hasError = meta.touched && meta.error; \r\n\r\n//   return (\r\n//     <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//       <div>\r\n//         <textarea {...input} {...props} />\r\n//       </div>\r\n//       {hasError && <span>{meta.error}</span>}\r\n//     </div>\r\n//   )\r\n// };\r\n\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n\r\n  return (\r\n    <FromControl {...props}><textarea {...input} {...restProps} /></FromControl>\r\n  )\r\n};\r\n\r\n\r\n\r\n\r\n// export const Input = ({input, meta, ...props}) => {\r\n//   const hasError = meta.touched && meta.error; \r\n\r\n//   return (\r\n//     <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//       <div>\r\n//         <input {...input} {...props} />\r\n//       </div>\r\n//       {hasError && <span>{meta.error}</span>}\r\n//     </div>\r\n//   )\r\n// };\r\n\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return (\r\n    <FromControl {...props}><input {...input} {...restProps} /></FromControl>\r\n  )\r\n};\r\n\r\n\r\nexport const createField = (placeholder, name, component, validators, props = {}, text = \"\") => (\r\n  <div>\r\n    <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props} />\r\n    {text}\r\n  </div> \r\n);","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"myPosts_postsBlock__6yHQW\",\"posts\":\"myPosts_posts__n0EP6\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__+BfJ0\"};","import post from './Post.module.css';\r\n\r\nconst Post = ({message, likeCount}) => {\r\n  return (\r\n    <div className={post.item}>\r\n      <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR-V-L3LM3amOt_N_OOkG1GLRkb5r6HnW8QoA&usqp=CAU' />\r\n      {message}\r\n      <div>\r\n        <span>like: </span>{likeCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;","// import style from './myPosts.module.css';\r\n// import Post from './post/Post';\r\n\r\n\r\n// const MyPosts = ({posts, newPostText, updateNewPostText, addPost}) => {\r\n  \r\n//   const postsElements = posts.map( ({message, likesCount, id}) => {\r\n//     return <Post message={message} likeCount={likesCount} key={id}/>;\r\n//   });\r\n  \r\n//   const onAddPost = () => {\r\n//     addPost();\r\n//   };\r\n\r\n//   const onPostChange = (e) => {\r\n//     const text = e.target.value;\r\n//     updateNewPostText(text);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={style.postsBlock}>\r\n//       <h3>My posts</h3>\r\n//       <div>\r\n//         <div>\r\n//           <textarea placeholder='Создайте пост...' onChange={onPostChange} value={newPostText}/>\r\n//         </div>\r\n//         <div>\r\n//         <button onClick={onAddPost}>Add post</button>\r\n//         </div>\r\n//       </div>\r\n//       <div className={style.posts}>\r\n//         {postsElements}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MyPosts;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport style from './myPosts.module.css';\r\nimport Post from './post/Post';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/formsControls/FormsControls';\r\nimport React, { PureComponent } from 'react';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst addNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={\"newPostText\"} validate={[required, maxLength10]} placeholder=\"Введите текст поста\" />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\n\r\nconst PostReduxForm = reduxForm({form: 'profileAddNewPostForm'})(addNewPostForm);\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n  \r\n  const postsElements = props.posts.map( ({message, likesCount, id}) => {\r\n    return <Post message={message} likeCount={likesCount} key={id}/>;\r\n  });\r\n\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={style.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <PostReduxForm onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={style.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\n\r\n// class MyPosts extends PureComponent {\r\n\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != this.props || nextState != this.state;\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   setTimeout(() => {\r\n  //     this.setState({a: 12});\r\n  //   }, 3000)\r\n  // }\r\n\r\n//   render() {\r\n\r\n//     console.log(\"RENDER-MyPosts\");\r\n    \r\n//     const postsElements = this.props.posts.map( ({message, likesCount, id}) => {\r\n//       return <Post message={message} likeCount={likesCount} key={id}/>;\r\n//     });\r\n  \r\n//     const onAddPost = (values) => {\r\n//       this.props.addPost(values.newPostText);\r\n//     };\r\n\r\n//      return (\r\n//     <div className={style.postsBlock}>\r\n//       <h3>My posts</h3>\r\n//       <div>\r\n//         <PostReduxForm onSubmit={onAddPost} />\r\n//       </div>\r\n//       <div className={style.posts}>\r\n//         {postsElements}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n//   }\r\n// };\r\n\r\n\r\n\r\nexport default MyPosts;","// import {addPostCreator, updateNewPostTextCreator} from '../../redux/profile-reducer';\r\n// import MyPosts from './MyPosts';\r\n\r\n\r\n// const MyPostsContainer = ({store}) => {\r\n\r\n//   const state = store.getState();\r\n  \r\n//   const newAddPost = () => {\r\n//     store.dispatch(addPostCreator());\r\n//   };\r\n\r\n//   const onPostChange = (text) => {\r\n//     const action = updateNewPostTextCreator(text);\r\n//     store.dispatch(action);\r\n//   };\r\n\r\n//   return (\r\n//     <MyPosts updateNewPostText={onPostChange} addPost={newAddPost} posts={state.profilePage.posts} newPostText={state.profilePage.newPostText}/>\r\n//   );\r\n// };\r\n\r\n// export default MyPostsContainer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import StoreContext from '../../../StoreContext';\r\nimport { connect } from 'react-redux';\r\nimport {addPostCreator, updateNewPostTextCreator} from '../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n// const MyPostsContainer = () => {\r\n\r\n//   return (\r\n//     <StoreContext.Consumer> \r\n//       { store => {\r\n//         const state = store.getState();\r\n\r\n//         const newAddPost = () => {\r\n//           store.dispatch(addPostCreator());\r\n//         };\r\n      \r\n//         const onPostChange = (text) => {\r\n//           const action = updateNewPostTextCreator(text);\r\n//           store.dispatch(action);\r\n//         };\r\n\r\n//         return <MyPosts updateNewPostText={onPostChange} addPost={newAddPost} posts={state.profilePage.posts} newPostText={state.profilePage.newPostText}/>\r\n//       }\r\n//     }  \r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\n// export default MyPostsContainer;\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // updateNewPostText: (text) => {\r\n    //   const action = updateNewPostTextCreator(text);\r\n    //   dispatch(action);\r\n    // },\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    }\r\n  };\r\n};\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__9hHtn\"};","\r\nimport style from './ProfileInfo.module.css';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status); \r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)  \r\n  }\r\n\r\n    return (   \r\n      <div>\r\n          { !editMode &&\r\n            <div>\r\n              <span onDoubleClick={activateEditMode}>{props.status || \"Статуса нет\"}</span>\r\n            </div>\r\n          }\r\n          { editMode &&\r\n            <div>\r\n              <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} ></input>\r\n            </div>\r\n          }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import Preloader from '../../common/preloader/Preloader';\r\nimport style from './ProfileInfo.module.css';\r\n// import ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img src='https://gorod-kurort-anapa.ru/img/stati/21_velikie-plyazhi-velikoy-rossii.jpg' />\r\n      </div> */}\r\n      <div className={style.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n        <h2>{profile.fullName}</h2>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        <h3>{profile.aboutMe}</h3>\r\n        <p>В поисках работы: {profile.lookingForAJob ? \"да\" : \"нет\"}</p>\r\n        <h3>Мои контакты</h3>\r\n        <p>facebook: {profile.contacts.facebook ? profile.contacts.facebook : \"нет\"}</p>\r\n        <p>website: {profile.contacts.website ? profile.contacts.website : \"нет\"}</p>\r\n        <p>vk: {profile.contacts.vk ? profile.contacts.vk : \"нет\"}</p>\r\n        <p>youtube: {profile.contacts.youtube ? profile.contacts.youtube : \"нет\"}</p>\r\n        <p>github: {profile.contacts.github ? profile.contacts.github : \"нет\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;","// import MyPostsContainer from './myPosts/MyPostsContainer';\r\n// import profile from './Profile.module.css';\r\n// import ProfileInfo from './profileInfo/ProfileInfo';\r\n\r\n\r\n// const Profile = ({store}) => {\r\n//   return (\r\n//     <div>\r\n//       <ProfileInfo />\r\n//       <MyPostsContainer store={store}/>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;\r\n\r\n\r\n\r\nimport MyPostsContainer from './myPosts/MyPostsContainer';\r\nimport profile from './Profile.module.css';\r\nimport ProfileInfo from './profileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getMeProfile, getStatus, updateStatus } from \"../redux/profile-reducer\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'; \r\nimport { Navigate, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component  {\r\n  \r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authirizedUserId;\r\n    };\r\n    if (!userId) {\r\n        this.props.router.navigate('/login');\r\n        }\r\n    \r\n    // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n    //   .then(response => {\r\n    //     this.props.setUserProfile(response.data);\r\n    //   });\r\n    // usersAPI.setUser(userId)\r\n    //   .then(data => {\r\n    //     this.props.setUserProfile(data);\r\n    //   });\r\n\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);\r\n\r\n      \r\n  }\r\n\r\n\r\n  // ДЛЯ ПЕРЕХОДА НА СВОЮ СТРАНИЦУ ИЗ ПРОФИЛЯ ДРУГОГО ЧЕЛОВЕКА\r\n  componentDidUpdate(prevProps) {\r\n\t\tlet userId = this.props.router.params.userId;\r\n\t\tif (prevProps.router.params.userId !== userId) {\r\n\t\t\tlet userId = 26794;\r\n      if (!userId) {\r\n        this.props.router.navigate('/login');\r\n        }\r\n       \r\n\t\t\r\n      // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n\t\t\t//   .then((response) => {\r\n\t\t\t// \t\tthis.props.setUserProfile(response.data);\r\n\t\t\t// \t});\r\n\r\n\r\n      // usersAPI.setProfile(userId)\r\n      //   .then((data) => {\r\n      //     this.props.setUserProfile(data);\r\n      //   });\r\n\r\n      this.props.getMeProfile(userId);\r\n      this.props.getStatus(userId);\r\n\t\t}\r\n\t}\r\n\r\n  render() {\r\n    // if (!this.props.isAuth) return <Navigate to=\"/login\" /> \r\n\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   profile: state.profilePage.profile,\r\n//   isAuth: state.auth.isAuth\r\n// });\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authirizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n  })\r\n};\r\n\r\n\r\nconst withRouter = (Component) => {\r\n\tfunction ComponentWithRouterProp(props) {\r\n\t\t// let location = useLocation();\r\n\t\tlet navigate = useNavigate();\r\n\t\tlet params = useParams();\r\n    \r\n\t\treturn (\r\n      <Component {...props} router={{ params, navigate }} />\r\n    );\r\n\t}\r\n\treturn ComponentWithRouterProp;\r\n};\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getMeProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n// const mapStateToPropsForRedirect = (state) => ({\r\n//   isAuth: state.auth.isAuth\r\n// });\r\n\r\n// AuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default connect(mapStateToProps, { getUserProfile, getMeProfile }) (withRouter(AuthRedirectComponent));","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />\r\n  \r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};","export const required = value => {\r\n  if (value) return undefined;\r\n\r\n  return \"Field is required\";\r\n};\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max lengths is ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__VZufH\",\"error\":\"FormsControls_error__VE14A\",\"formSummaryError\":\"FormsControls_formSummaryError__Y-xFD\"};"],"names":["FromControl","input","meta","touched","error","props","hasError","className","styles","children","Textarea","restProps","child","Input","createField","placeholder","name","component","validators","text","validate","message","likeCount","post","src","maxLength10","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","required","React","postsElements","posts","map","likesCount","id","style","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","fullName","aboutMe","lookingForAJob","contacts","facebook","website","vk","youtube","github","Preloader","ProfileContainer","userId","this","router","params","authirizedUserId","navigate","getUserProfile","getStatus","prevProps","getMeProfile","compose","auth","isAuth","Component","useNavigate","useParams","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","to","maxLength","length"],"sourceRoot":""}