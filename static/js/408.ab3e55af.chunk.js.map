{"version":3,"file":"static/js/408.ab3e55af.chunk.js","mappings":"8UAKMA,EAAc,SAAH,GAAU,EAALC,MAA8C,IAAxC,EAAD,EAAEC,KAAOC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAWC,GAAK,YACrDC,EAAWH,GAAWC,EAE5B,OACE,iBAAKG,UAAWC,EAAAA,EAAAA,YAAqB,KAAOF,EAAWE,EAAAA,EAAAA,MAAe,IAAI,WACxE,yBACGH,EAAMI,WAERH,IAAY,0BAAOF,MAG1B,EAiBaM,EAAW,SAACL,GACvB,IAAOJ,EAAoCI,EAApCJ,MAAuBU,GAAaN,EAA7BH,KAA6BG,EAAvBO,OAAmB,OAAIP,EAAK,IAEhD,OACE,SAACL,GAAW,kBAAKK,GAAK,cAAE,uCAAcJ,GAAWU,MAErD,EAmBaE,EAAQ,SAACR,GACpB,IAAOJ,EAAoCI,EAApCJ,MAAuBU,GAAaN,EAA7BH,KAA6BG,EAAvBO,OAAmB,OAAIP,EAAK,IAChD,OACE,SAACL,GAAW,kBAAKK,GAAK,cAAE,oCAAWJ,GAAWU,MAElD,EAGaG,EAAc,SAACC,EAAaC,EAAMC,EAAWC,GAAU,IAAEb,EAAK,uDAAG,CAAC,EAAGc,EAAI,uDAAG,GAAE,OACzF,4BACE,SAAC,KAAK,QAACJ,YAAaA,EAAaC,KAAMA,EAAMC,UAAWA,EAAWG,SAAUF,GAAgBb,IAC5Fc,IACG,C,wHChCFE,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EA5BL,SAAH,GAA2C,IAAtCE,EAAY,EAAZA,aAAcpB,EAAK,EAALA,MAAOqB,EAAU,EAAVA,WACvC,OACE,kBAAMC,SAAUF,EAAa,WAExBV,EAAAA,EAAAA,IAAY,QAAS,QAASD,EAAAA,GAAO,CAACc,EAAAA,KAGxCb,EAAAA,EAAAA,IAAY,WAAY,WAAYD,EAAAA,GAAO,CAACc,EAAAA,GAAW,CAACC,KAAM,cAI9Dd,EAAAA,EAAAA,IAAY,KAAM,aAAcD,EAAAA,GAAO,GAAI,CAACe,KAAM,YAAa,eAI/DH,IAAc,gBAAKI,IAAKJ,EAAYlB,UAAWC,EAAAA,EAAAA,eAC/CiB,IAAcX,EAAAA,EAAAA,IAAY,qBAAsB,UAAWD,EAAAA,GAAO,CAACc,EAAAA,GAAW,CAAC,GAC9EvB,IAAS,gBAAKG,UAAWC,EAAAA,EAAAA,iBAAwB,SAChDJ,KAEH,0BACE,0CAIR,IA+BA,WAAe0B,EAAAA,EAAAA,KANS,SAACC,GAAK,MAAM,CAClCN,WAAYM,EAAMC,KAAKP,WACvBQ,OAAQF,EAAMC,KAAKC,OACpB,GAGuC,CAACC,MAAAA,EAAAA,IAAzC,EAzBc,SAAC7B,GAMb,OAAIA,EAAM4B,QACD,SAAC,KAAQ,CAACE,GAAI,cAIrB,4BACE,mCACA,SAACd,EAAc,CAACK,SAXH,SAACU,GAChB/B,EAAM6B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,QAC/E,EASwCf,WAAYpB,EAAMoB,eAG5D,G,8ECzDO,IAAME,EAAW,SAAAc,GACtB,IAAIA,EAEJ,MAAO,mBACT,EAGaC,EAAmB,SAACC,GAAS,OAAK,SAACF,GAC9C,GAAIA,EAAMG,OAASD,EAAW,MAAM,kBAAN,OAAyBA,EAAS,WAGlE,CAAE,C,qBCVF,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wCAAwC,aAAe,oC","sources":["components/common/formsControls/FormsControls.jsx","components/login/Login.jsx","utils/validators/validators.js","webpack://learning-react/./src/components/common/formsControls/FormsControls.module.css?6519"],"sourcesContent":["import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\n\r\nconst FromControl = ({input, meta: {touched, error}, ...props}) => {\r\n  const hasError = touched && error; \r\n\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n// export const Textarea = ({input, meta, ...props}) => {\r\n//   const hasError = meta.touched && meta.error; \r\n\r\n//   return (\r\n//     <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//       <div>\r\n//         <textarea {...input} {...props} />\r\n//       </div>\r\n//       {hasError && <span>{meta.error}</span>}\r\n//     </div>\r\n//   )\r\n// };\r\n\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n\r\n  return (\r\n    <FromControl {...props}><textarea {...input} {...restProps} /></FromControl>\r\n  )\r\n};\r\n\r\n\r\n\r\n\r\n// export const Input = ({input, meta, ...props}) => {\r\n//   const hasError = meta.touched && meta.error; \r\n\r\n//   return (\r\n//     <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//       <div>\r\n//         <input {...input} {...props} />\r\n//       </div>\r\n//       {hasError && <span>{meta.error}</span>}\r\n//     </div>\r\n//   )\r\n// };\r\n\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return (\r\n    <FromControl {...props}><input {...input} {...restProps} /></FromControl>\r\n  )\r\n};\r\n\r\n\r\nexport const createField = (placeholder, name, component, validators, props = {}, text = \"\") => (\r\n  <div>\r\n    <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props} />\r\n    {text}\r\n  </div> \r\n);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { createField, Input } from \"../common/formsControls/FormsControls\";\r\nimport { login } from \"../redux/auth-reducer\";\r\nimport styles from \"./../common/formsControls/FormsControls.module.css\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* <div> */}\r\n        {createField(\"Email\", \"email\", Input, [required])}\r\n        {/* <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required]} /> */}\r\n      {/* </div> */}\r\n      {createField(\"Password\", \"password\", Input, [required], {type: \"password\"})}\r\n      {/* <div>\r\n      <Field placeholder={\"Password\"} name={\"password\"} component={Input} validate={[required]} type={\"password\"} />\r\n      </div> */}\r\n      {createField(null, \"rememberMe\", Input, [], {type: \"checkbox\"}, \"remember me\")}\r\n      {/* <div>\r\n      <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"} /> remember me\r\n      </div> */}\r\n      {captchaUrl && <img src={captchaUrl} className={styles.imageCaptcha}/>}\r\n      {captchaUrl && createField(\"symbols from image\", \"captcha\", Input, [required], {}) }\r\n      { error && <div className={styles.formSummaryError}>\r\n        {error}\r\n      </div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Navigate to={\"/profile\"} />\r\n  } \r\n\r\n  return (\r\n    <div>\r\n      <h1>LOGIN</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  captchaUrl: state.auth.captchaUrl,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { Field, reduxForm } from \"redux-form\";\r\n// import { getPermissionToLogin, getAuthUserData } from \"../redux/auth-reducer\";\r\n\r\n\r\n// const LoginForm = (props) => {\r\n//   console.log(\"Rerender\");\r\n//   return (\r\n//     <form onSubmit={props.handleSubmit}>\r\n//       <div>\r\n//         <Field placeholder={\"Login\"} name={\"login\"} component={\"input\"} />\r\n//       </div>\r\n//       <div>\r\n//       <Field placeholder={\"Password\"} name={\"password\"} component={\"input\"} />\r\n//       </div>\r\n//       <div>\r\n//       <Field component={\"input\"} name={\"rememberMe\"} type={\"checkbox\"} /> remember me\r\n//       </div>\r\n//       <div>\r\n//         <button>Login</button>\r\n//       </div>\r\n//     </form>\r\n//   )\r\n// };\r\n\r\n\r\n// const LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\n// const Login = (props) => {\r\n//   const onSubmit = (formData) => {\r\n//     console.log(formData);\r\n//     props.getPermissionToLogin(formData.login, formData.password);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>LOGIN</h1>\r\n//       <LoginReduxForm onSubmit={onSubmit} />\r\n//     </div>\r\n//   )\r\n// };\r\n\r\n\r\n// export default connect( null, {getPermissionToLogin} ) (Login);\r\n// export default Login;\r\n\r\n// const LoginForm = (props) => {\r\n//   console.log(\"Rerender\");\r\n//   return (\r\n//     <form onSubmit={props.handleSubmit}>\r\n//       <div>\r\n//         <Field placeholder={\"Login\"} name={\"login\"} component={\"input\"} />\r\n//       </div>\r\n//       <div>\r\n//       <Field placeholder={\"Password\"} name={\"password\"} component={\"input\"} />\r\n//       </div>\r\n//       <div>\r\n//       <Field component={\"input\"} name={\"rememberMe\"} type={\"checkbox\"} /> remember me\r\n//       </div>\r\n//       <div>\r\n//         <button>Login</button>\r\n//       </div>\r\n//     </form>\r\n//   )\r\n// };\r\n\r\n\r\n// const LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\n// class Login extends React.Component {\r\n\r\n//   onSubmit = (formData) => {\r\n//     console.log(formData);\r\n//     this.props.getPermissionToLogin(formData.login, formData.password);\r\n//   };\r\n\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h1>LOGIN</h1>\r\n//         <LoginReduxForm onSubmit={this.onSubmit} />\r\n//       </div>\r\n//     )\r\n//   }\r\n// };\r\n\r\n\r\n\r\n// export default connect( null, {getPermissionToLogin, getAuthUserData} ) (Login);","export const required = value => {\r\n  if (value) return undefined;\r\n\r\n  return \"Field is required\";\r\n};\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max lengths is ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__VZufH\",\"error\":\"FormsControls_error__VE14A\",\"formSummaryError\":\"FormsControls_formSummaryError__Y-xFD\",\"imageCaptcha\":\"FormsControls_imageCaptcha__VIGc9\"};"],"names":["FromControl","input","meta","touched","error","props","hasError","className","styles","children","Textarea","restProps","child","Input","createField","placeholder","name","component","validators","text","validate","LoginReduxForm","reduxForm","form","handleSubmit","captchaUrl","onSubmit","required","type","src","connect","state","auth","isAuth","login","to","formData","email","password","rememberMe","captcha","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}